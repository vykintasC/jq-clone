TestSuiteLog {testSuiteName = UnqualComponentName "from-upstream", testLogs = GroupLogs "Default" [TestLog {testName = "input: `null`, filter: `.` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"foo\": 42, \"bar\": 43}`, filter: `.foo` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"foo\": {\"bar\": 42}, \"bar\": \"badvalue\"}`, filter: `.foo | .bar` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"foo\": {\"bar\": 42}, \"bar\": \"badvalue\"}`, filter: `.foo.bar` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"foo_bar\": 2}`, filter: `.foo_bar` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"foo\": {\"bar\": 42}, \"bar\": \"badvalue\"}`, filter: `.[\"foo\"].bar` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"foo\": {\"bar\": 20}}`, filter: `.\"foo\".\"bar\"` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `[1,[2],{\"foo\":3,\"bar\":4},{},{\"foo\":5}]`, filter: `[.[]|.foo?]` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `[1,[2],[],{\"foo\":3},{\"foo\":{\"bar\":4}},{}]`, filter: `[.[]|.foo?.bar?]` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `[1,null,[],[1,[2,[[3]]]],[{}],[{\"a\":[1,[2]]}]]`, filter: `[.[]|.[]?]` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `[1,null,true,false,\"abcdef\",{},{\"a\":1,\"b\":2},[],[1,2,3,4,5],[1,2]]`, filter: `[.[]|.[1:3]?]` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `true` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `false` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `42`, filter: `null` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `1` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `-1` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `{}` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `[]` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `{x: -1}` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `null`, filter: `{a: 1}` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"a\":1, \"b\":2, \"c\":3, \"d\":\"c\"}`, filter: `{a,b,(.d):.a,e:.b}` ", testOptionsReturned = [], testResult = Pass},TestLog {testName = "input: `{\"a\":1, \"b\":2, \"c\":3, \"a$2\":4}`, filter: `{\"a\",b,\"a$2\"}` ", testOptionsReturned = [], testResult = Fail "The outputs don't match: Expected: `{\n  \"a\": 1,\n  \"a$2\": 4,\n  \"b\": 2\n}\n`, Got: `{\n  \"a\": 1,\n  \"b\": 2,\n  \"a$2\": 4\n}\n`."}], logFile = "/Users/vykintascivas/Desktop/jq-clone/.stack-work/logs/JqClone-0.1.0.0-from-upstream.log"}